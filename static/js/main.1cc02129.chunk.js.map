{"version":3,"sources":["components/_Shared/Wave.tsx","components/HeroCard.tsx","components/HeroList.tsx","components/ProfileForm.tsx","components/_Shared/Modal.tsx","redux/heroes/actions.ts","redux/heroes/types.ts","components/HeroProfile.tsx","utils/checkEmpty.ts","components/_Shared/Loading.tsx","components/_Shared/WithFixContent.tsx","pages/HeroPage.tsx","App.tsx","serviceWorker.ts","redux/heroes/reducer.ts","redux/root-reducer.ts","apis/root-api.ts","apis/heroes.ts","redux/heroes/sagas.ts","redux/root-saga.ts","redux/store.ts","index.tsx"],"names":["drift","keyframes","WaveBox","styled","div","WaveOne","WaveTwo","WaveThree","Wave","CardContent","NavLink","HeroImage","img","HeroName","props","selected","HeroCard","hero","id","name","image","handleFetchHeroProfile","selectedHeroId","useSelector","state","heroes","heroId","preHeroId","to","data-testid","onClick","src","alt","NavList","section","memo","map","key","ProfileFormContainer","form","AbilityWrap","AbilityRow","AbilityTitle","p","AbilityContent","AbilityButton","button","RightBox","FlexColumn","RemainingPoint","SaveButton","ABILITIES","profile","profileIsEmpty","unusedPoints","handleChangeProfile","handleSaveProfile","onSubmit","ability","type","disabled","ModalOverlay","open","ModalContainer","ModalHeader","ModalTitle","h2","CloseButton","ModalContent","Modal","onClose","storeHero","payload","storeHeroProfile","changeProfile","setSelectedHeroId","ProfileWrapper","HeroProfile","dispatch","useDispatch","useParams","useState","modalOpen","setModalOpen","useMemo","Object","keys","every","isEmptyProfile","action","newProfile","event","preventDefault","saveProfile","Icons","Icon","animated","Loading","images","useSprings","springs","set","useEffect","start","index","from","rotate","scale","delay","setInterval","style","FixContent","FlexCenter","WitchFixContent","children","controlInitialRender","useRef","useCallback","fetchHeroProfile","undefined","current","length","isEmptyHeroData","WithFixContent","Container","App","exact","path","render","component","HeroPage","Boolean","window","location","hostname","match","initialState","str","int","agi","luk","heroesReducer","rootReducer","combineReducers","heroReducer","rootAPI","axios","create","baseURL","process","getHero","get","getHeroProfile","patchHeroProfile","data","patch","fetchHero","heroesSaga","call","res","put","all","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uoCAGA,IAAMA,EAAQC,YAAH,KASLC,EAAUC,IAAOC,IAAV,KAqBPC,EAAUF,IAAOC,IAAV,IAEEJ,GAGTM,EAAUH,IAAOC,IAAV,IACEJ,GAKTO,EAAYJ,IAAOC,IAAV,IACAJ,GAcAQ,EAVF,WACX,OACE,kBAACN,EAAD,KACE,kBAACG,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,Q,8oBC9CN,IAAME,EAAcN,YAAOO,IAAPP,CAAH,KASXQ,EAAYR,IAAOS,IAAV,KAITC,EAAWV,IAAOC,IAAV,KAUV,SAACU,GAAD,OACAA,EAAMC,UAAN,4BAiCWC,EAvB2B,SAAC,GAGpC,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,GAAIC,EAER,EAFQA,KAAMC,EAEd,EAFcA,MAClBC,EACI,EADJA,uBAEMC,EAAiBC,aACrB,SAACC,GAAD,OAAsBA,EAAMC,OAAOH,kBACnC,SAACI,EAAQC,GAAT,OAAuBD,IAAWR,GAAMS,IAAcT,KAGxD,OACE,kBAACT,EAAD,CACEmB,GAAE,kBAAaV,GACfW,cAAY,YACZC,QAAS,kBAAMT,EAAuBH,KAEtC,kBAACP,EAAD,CAAWkB,cAAY,aAAaE,IAAKX,EAAOY,IAAKb,IACrD,kBAACN,EAAD,CAAUgB,cAAY,YAAYd,SAAUO,IAAmBJ,GAC5DC,K,6YCrDT,IAAMc,EAAU9B,IAAO+B,QAAV,KAiCEC,kBAjB2B,SAAC,GAGpC,IAFLV,EAEI,EAFJA,OACAJ,EACI,EADJA,uBAEA,OACE,kBAACY,EAAD,CAASJ,cAAY,aAClBJ,EAAOW,KAAI,SAACnB,GAAD,OACV,kBAAC,EAAD,CACEoB,IAAKpB,EAAKC,GACVD,KAAMA,EACNI,uBAAwBA,W,2lFC1BlC,IAAMiB,EAAuBnC,IAAOoC,KAAV,KAUpBC,EAAcrC,IAAOC,IAAV,KAeXqC,EAAatC,IAAOC,IAAV,KAYVsC,EAAevC,IAAOwC,EAAV,KASZC,EAAiBzC,IAAOwC,EAAV,KASdE,EAAgB1C,IAAO2C,OAAV,KAsBbC,EAAW5C,IAAOC,IAAV,KASR4C,EAAa7C,IAAOC,IAAV,KAWV6C,GAAiB9C,IAAOC,IAAV,KAMd8C,GAAa/C,IAAO2C,OAAV,KAmBVK,GAAY,CAAC,MAAO,MAAO,MAAO,OAuDzBhB,mBArDiC,SAAC,GAM1C,IALLiB,EAKI,EALJA,QACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,kBAEA,OACE,kBAAClB,EAAD,CAAsBmB,SAAUD,GAC9B,kBAAChB,EAAD,KACGW,GAAUf,KAAI,SAACsB,GAAD,OACb,kBAACjB,EAAD,CAAYJ,IAAKqB,GACf,kBAAChB,EAAD,CAAcb,cAAY,iBAAiB6B,GAC3C,kBAACb,EAAD,CACEc,KAAK,SACL7B,QAAS,kBAAMyB,EAAoB,WAAYG,IAC/C7B,cAAY,oBACZ+B,SAAUP,GAEV,kBAAC,IAAD,OAEF,kBAACT,EAAD,CAAgBf,cAAY,mBACzBwB,EAAiB,kBAAC,IAAD,MAAcD,EAAQM,IAE1C,kBAACb,EAAD,CACEc,KAAK,SACL7B,QAAS,kBAAMyB,EAAoB,WAAYG,IAC/C7B,cAAY,mBACZ+B,SAAUP,GAEV,kBAAC,IAAD,YAKR,kBAACN,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,GAAD,CAAgBpB,cAAY,oBAA5B,qBACqByB,GAErB,kBAACJ,GAAD,CACES,KAAK,SACL9B,cAAY,cACZ+B,SAAUP,GAEV,kBAAC,IAAD,MALF,e,6/BClKV,IAAMQ,GAAe1D,IAAOC,IAAV,MASd,SAACU,GAAD,kCACcA,EAAMgD,KAAO,UAAY,SADvC,WAKEC,GAAiB5D,IAAOC,IAAV,MASd4D,GAAc7D,IAAOC,IAAV,MAOX6D,GAAa9D,IAAO+D,GAAV,MAIVC,GAAchE,IAAO2C,OAAV,MAgBXsB,GAAejE,IAAOC,IAAV,MAkBHiE,GAdqB,SAAC,GAAuB,IAArBP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,QAC3C,OACE,kBAACT,GAAD,CAAcC,KAAMA,GAClB,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,iBACA,kBAACE,GAAD,CAAarC,QAASwC,GAAtB,SAEF,kBAACF,GAAD,2CCpDKG,GAAY,SAAC9C,GAAD,MAAwC,CAC/DkC,KClBwB,aDmBxBa,QAAS/C,IAQEgD,GAAmB,SAACrB,GAAD,MAA8C,CAC5EO,KC1BgC,qBD2BhCa,QAAS,CAAEpB,aAGAsB,GAAgB,SAC3BtB,EACAE,GAF2B,MAGJ,CACvBK,KCjC4B,iBDkC5Ba,QAAS,CAAEpB,UAASE,kBAeTqB,GAAoB,SAACjD,GAAD,MAAwC,CACvEiC,KC/CkC,uBDgDlCa,QAAS,CAAE9C,Y,2YE1Cb,IAAMkD,GAAiBzE,IAAOC,IAAV,MA+ELyE,GA9DiC,WAC9C,IAAMC,EAAWC,cACTrD,EAAWsD,cAAXtD,OAF4C,EAGlBuD,oBAAS,GAHS,mBAG7CC,EAH6C,KAGlCC,EAHkC,KAI9C7B,EAAe/B,aACnB,SAACC,GAAD,OAAsBA,EAAMC,OAAO6B,gBAE/BF,EAAU7B,aAAY,SAACC,GAAD,OAAsBA,EAAMC,OAAO2B,WAEzDC,EAAiB+B,mBAAQ,kBClCa,SAAChC,GAC7C,OAAOiC,OAAOC,KAAKlC,GAASmC,OAAM,SAAClD,GAAD,OAA0B,IAAjBe,EAAQf,MDiCdmD,CAAepC,KAAU,CAACA,IAmC/D,OACE,oCACE,kBAACwB,GAAD,KACE,kBAAC,GAAD,CACExB,QAASA,EACTE,aAAcA,EACdD,eAAgBA,EAChBE,oBAnCoB,SAACkC,EAAgB/B,GAC3C,IAAMgC,EAAU,eAAQtC,GACT,aAAXqC,GAAyBnC,EAAe,GAC1CoC,EAAWhC,IAAY,EACvBoB,EAASJ,GAAcgB,EAAYpC,EAAe,KAC9B,aAAXmC,GAAyBrC,EAAQM,GAAW,IACrDgC,EAAWhC,IAAY,EACvBoB,EAASJ,GAAcgB,EAAYpC,EAAe,MA6B9CE,kBArBkB,SAACmC,GACzBA,EAAMC,iBACe,IAAjBtC,EACFwB,EFvBqB,SACzBpD,EACA0B,GAFyB,MAGF,CACvBO,KCxC0B,eDyC1Ba,QAAS,CAAE9C,SAAQ0B,YEkBNyC,CAAYnE,EAAQ0B,IAE7B+B,GAAa,OAmBb,kBAAC,GAAD,CAAOrB,KAAMoB,EAAWZ,QAfA,WAC1Ba,GAAa,KAcX,W,4WEjFN,IAAMW,GAAQ3F,IAAOC,IAAV,MAUL2F,GAAO5F,YAAO6F,YAAS5F,IAAhBD,CAAH,MACU,SAACW,GAAD,OAA8BA,EAAMM,SA8CzC6E,GA1CC,WACd,IADoB,EAWDhB,mBATH,CACZ,iEACA,gEACA,iEACA,qEAKGiB,EAXa,sBAaGC,sBAAW,GAAG,iBAAO,MAbxB,mBAabC,EAba,KAaJC,EAbI,KAiCpB,OAlBAC,qBAAU,YACR,SAAUC,IACRF,GAAI,SAACG,GAAD,MAAY,CACdC,KAAM,CACJC,OAAQ,IACRC,MAAO,GAET/E,GAAI,CACF8E,OAAQ,IACRC,MAAO,GAETC,MAAO,IAAMJ,EAAQ,QAEvBK,YAAYN,EAAO,KAZrB,KAeC,CAACF,IAGF,kBAACP,GAAD,KACGM,EAAQhE,KAAI,SAACtB,EAAO0F,GAAR,OACX,kBAACT,GAAD,CAAMe,MAAOhG,EAAOuB,IAAKmE,EAAOpF,MAAO8E,EAAOM,U,gTCpDtD,IAAMO,GAAa5G,IAAOC,IAAV,MAQV4G,GAAa7G,IAAOC,IAAV,MAeD6G,GARmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,OACE,kBAACH,GAAD,KACE,kBAACC,GAAD,KAAaE,KC4CJ/E,mBAhDE,WACf,IAAMV,EAASF,aAAY,SAACC,GAAD,OAAsBA,EAAMC,OAAOA,UACxDqD,EAAWC,cACTrD,EAAWsD,cAAXtD,OACFyF,EAAuBC,mBAEvB/F,EAAyBgG,uBAC7B,SAAC/F,GACCwD,ENwBgD,CACpDnB,KC5C2B,kBKoBvBmB,ENH0B,SAACpD,GAAD,MAAwC,CACtEiC,KCtBgC,qBDuBhCa,QAAS,CAAEtD,GAAIQ,IMCF4F,CAAiBhG,MAE5B,CAACwD,IAkBH,OAfAwB,qBAAU,gBACOiB,IAAX7F,GACFoD,EAASH,GAAkB,UAGQ4C,IAAjCJ,EAAqBK,cAIVD,IAAX7F,IACFyF,EAAqBK,QAAU9F,EAC/BL,EAAuBK,MAExB,CAACL,EAAwBK,EAAQoD,IHnCU,SAACrD,GAC/C,OAAyB,IAAlBA,EAAOgG,OGoCVC,CAAgBjG,GAEhB,kBAACkG,GAAD,KACE,kBAAC,GAAD,OAMJ,oCACE,kBAAC,EAAD,CACElG,OAAQA,EACRJ,uBAAwBA,MAEvBK,GAAU,kBAAC,GAAD,U,+OC9CnB,IAAMkG,GAAYzH,IAAOC,IAAV,MAiCAyH,OApBf,WACE,IAAM/C,EAAWC,cAMjB,OAJAuB,qBAAU,WACRxB,EPjB+C,CACjDnB,KCfwB,iBMgCrB,CAACmB,IAGF,kBAAC8C,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUpG,GAAG,eACjD,kBAAC,IAAD,CAAOmG,KAAK,mBAAmBE,UAAWC,SC5BhCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCRAC,GAA4B,CAChC/G,OAAQ,GACR2B,QAAS,CACPqF,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEPtF,aAAc,EACdhC,eAAgB,IA6CHuH,GA1CO,WAGH,IAFjBrH,EAEgB,uDAFRgH,GACR/C,EACgB,uCAChB,OAAQA,EAAO9B,MACb,IR1BsB,aQ2BpB,OAAO,2BACFnC,GADL,IAEEC,OAAQgE,EAAOjB,UAEnB,IR7B8B,qBQ8B5B,OAAO,2BACFhD,GADL,IAEE4B,QAASqC,EAAOjB,QAAQpB,UAE5B,IRjC0B,iBQkCxB,OAAO,2BACF5B,GADL,IAEE4B,QAASqC,EAAOjB,QAAQpB,QACxBE,aAAcmC,EAAOjB,QAAQlB,eAEjC,IRrCyB,gBQsCvB,OAAO,2BACF9B,GADL,IAEE4B,QAAS,CACPqF,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEPtF,aAAc,IAElB,IR/CgC,uBQgD9B,OAAO,2BACF9B,GADL,IAEEF,eAAgBmE,EAAOjB,QAAQ9C,SAEnC,QACE,OAAOF,ICnDEsH,GANKC,aAAgB,CAClCtH,OAAQuH,K,sCCEKC,G,QAJCC,EAAMC,OAAO,CAC3BC,QAAQ,GAAD,OAAKC,yCCKDC,GAAsB,kBAAML,GAAQM,IAAI,YAExCC,GAAoC,SAAC9H,GAAD,OAC/CuH,GAAQM,IAAR,kBAAuB7H,EAAvB,cAEW+H,GAAwC,SACnD/H,EACAgI,GAFmD,OAGhDT,GAAQU,MAAR,kBAAyBjI,EAAzB,YAA2CgI,I,aCH/BE,I,aAOAtC,I,aAUAzB,I,aAQQgE,IAzBlB,SAAUD,KAAV,0EACO,OADP,SACaE,aAAKR,IADlB,OAIL,OAHMS,EADD,OAECtI,EAASsI,EAAIL,KAFd,SAICM,aAAIzF,GAAU9C,IAJf,wCAOA,SAAU6F,GAAV,iFAEL,OAFkC9C,EAA7B,EAA6BA,QAC1BtD,EAAOsD,EAAPtD,GADH,SAEC8I,aAAIrF,GAAkBzD,IAFvB,OAIO,OAJP,SAIa4I,aAAKN,GAAgBtI,GAJlC,OAOL,OAHM6I,EAJD,OAKC3G,EAAU2G,EAAIL,KALf,UAOCM,aAAIvF,GAAiBrB,IAPtB,yCAUA,SAAUyC,GAAV,yFAKL,OAL6BrB,EAAxB,EAAwBA,QACrB9C,EAAoB8C,EAApB9C,OAAQ0B,EAAYoB,EAAZpB,QACRqF,EAAuBrF,EAAvBqF,IAAKC,EAAkBtF,EAAlBsF,IAAKC,EAAavF,EAAbuF,IAAKC,EAAQxF,EAARwF,IACjBc,EAAO,CAAEjB,MAAKC,MAAKC,MAAKC,OAHzB,SAKCkB,aAAKL,GAAkB/H,EAAQgI,GALhC,wCAQQ,SAAUG,KAAV,kEACb,OADa,SACPI,aAAI,CACRC,aZxCsB,aYwCAN,IACtBM,aZvC8B,qBYuCA5C,IAC9B4C,aZrCwB,eYqCArE,MAJb,wC,iBCnCLsE,IAAV,SAAUA,KAAV,kEACE,OADF,SACQF,aAAI,CAACJ,OADb,wCAIeM,UCDTC,GAAiBC,eAEjBC,GAAc,CAACF,IASfG,GAAQC,aAAY1B,GAAa2B,KAAe,WAAf,EAAmBH,KAE1DF,GAAeM,IAAIP,IAEJI,UCbfI,IAAS3C,OACP,kBAAC,IAAD,CAAUuC,MAAOA,IACf,kBAAC,GAAD,OAEFK,SAASC,eAAe,SR+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1cc02129.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst drift = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst WaveBox = styled.div`\n  position: fixed;\n  top: 0;\n  transform: rotate(80deg);\n  left: 0;\n\n  & > div {\n    width: 1500px;\n    height: 1300px;\n    margin-left: -150px;\n    margin-top: -250px;\n    transform-origin: 50% 48%;\n    border-radius: 43%;\n    opacity: 0.4;\n\n    position: fixed;\n    top: 3%;\n    left: 10%;\n  }\n`;\n\nconst WaveOne = styled.div`\n  background: #0af;\n  animation: ${drift} 7000ms infinite linear;\n`;\n\nconst WaveTwo = styled.div`\n  animation: ${drift} 3000ms infinite linear;\n  opacity: 0.1;\n  background: black;\n`;\n\nconst WaveThree = styled.div`\n  animation: ${drift} 7500ms infinite linear;\n  background-color: #77daff;\n`;\n\nconst Wave = () => {\n  return (\n    <WaveBox>\n      <WaveOne />\n      <WaveTwo />\n      <WaveThree />\n    </WaveBox>\n  );\n};\n\nexport default Wave;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { HeroCardProps } from \"./types/HeroCard\";\r\nimport { RootState } from \"../redux\";\r\n\r\nconst CardContent = styled(NavLink)`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  border: 3px solid white;\r\n  border-radius: 2px;\r\n  display: grid;\r\n`;\r\n\r\nconst HeroImage = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst HeroName = styled.div`\r\n  width: 100%;\r\n  font-size: 3rem;\r\n  font-family: \"Archivo Black\", sans-serif;\r\n  white-space: nowrap;\r\n  color: white;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  line-height: 2.4em;\r\n  transition: all 0.5s;\r\n\r\n  ${(props: { selected: boolean }) =>\r\n    props.selected &&\r\n    `\r\n    color: gold;\r\n  `}\r\n\r\n  @media (max-width: 1200px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst HeroCard: React.FC<HeroCardProps> = ({\r\n  hero: { id, name, image },\r\n  handleFetchHeroProfile,\r\n}) => {\r\n  const selectedHeroId = useSelector(\r\n    (state: RootState) => state.heroes.selectedHeroId,\r\n    (heroId, preHeroId) => heroId !== id && preHeroId !== id\r\n  );\r\n\r\n  return (\r\n    <CardContent\r\n      to={`/heroes/${id}`}\r\n      data-testid=\"hero-card\"\r\n      onClick={() => handleFetchHeroProfile(id)}\r\n    >\r\n      <HeroImage data-testid=\"hero-image\" src={image} alt={name} />\r\n      <HeroName data-testid=\"hero-name\" selected={selectedHeroId === id}>\r\n        {name}\r\n      </HeroName>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default HeroCard;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport HeroCard from \"./HeroCard\";\r\nimport { HeroListProps } from \"./types/HeroList\";\r\n\r\nconst NavList = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));\r\n  grid-gap: 4rem;\r\n\r\n  z-index: 1;\r\n\r\n  @media (max-width: 992px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(11rem, 1fr));\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\r\n  }\r\n`;\r\n\r\nconst HeroList: React.FC<HeroListProps> = ({\r\n  heroes,\r\n  handleFetchHeroProfile,\r\n}) => {\r\n  return (\r\n    <NavList data-testid=\"card-list\">\r\n      {heroes.map((hero) => (\r\n        <HeroCard\r\n          key={hero.id}\r\n          hero={hero}\r\n          handleFetchHeroProfile={handleFetchHeroProfile}\r\n        />\r\n      ))}\r\n    </NavList>\r\n  );\r\n};\r\n\r\nexport default memo(HeroList);\r\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { MdAdd, MdRemove, MdSave, MdGrade } from \"react-icons/md\";\n\nimport { ProfileFormProps } from \"./types/ProfileForm\";\n\nconst ProfileFormContainer = styled.form`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(2, auto-fit);\n  }\n`;\n\nconst AbilityWrap = styled.div`\n  display: grid;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n  }\n\n  @media (max-width: 576px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n  }\n`;\n\nconst AbilityRow = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  line-height: 2.4rem;\n  height: 8rem;\n\n  @media (max-width: 576px) {\n    justify-content: center;\n  }\n`;\n\nconst AbilityTitle = styled.p`\n  width: 4rem;\n  margin-right: 4rem;\n\n  @media (max-width: 1200px) {\n    margin-right: 2rem;\n  }\n`;\n\nconst AbilityContent = styled.p`\n  width: 4rem;\n  text-align: center;\n\n  &:disabled {\n    color: rgba(0, 0, 0, 0.26);\n  }\n`;\n\nconst AbilityButton = styled.button`\n  width: 4rem;\n  height: 4rem;\n  margin: 0 12px;\n  border: 2px solid white;\n  color: #0c5499;\n  background-color: white;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 4rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:disabled {\n    background-color: #e7e7e7;\n    color: rgba(0, 0, 0, 0.26);\n    border: 2px solid #e7e7e7;\n  }\n`;\n\nconst RightBox = styled.div`\n  align-self: end;\n  justify-self: end;\n\n  @media (max-width: 768px) {\n    justify-self: center;\n  }\n`;\n\nconst FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-bottom: 1.5rem;\n\n  @media (max-width: 768px) {\n    align-items: center;\n  }\n`;\n\nconst RemainingPoint = styled.div`\n  font-size: 1.5rem;\n  padding-bottom: 1rem;\n  text-align: right;\n`;\n\nconst SaveButton = styled.button`\n  height: 3rem;\n  border: 2px solid white;\n  background-color: white;\n  color: #0c5499;\n  cursor: pointer;\n  font-size: 2.5rem;\n  display: flex;\n  align-items: center;\n  padding: 1.5rem;\n  border-radius: 4px;\n\n  &:disabled {\n    background-color: #e7e7e7;\n    color: rgba(0, 0, 0, 0.26);\n    border: 2px solid #e7e7e7;\n  }\n`;\n\nconst ABILITIES = [\"str\", \"int\", \"agi\", \"luk\"];\n\nconst ProfileForm: React.FC<ProfileFormProps> = ({\n  profile,\n  profileIsEmpty,\n  unusedPoints,\n  handleChangeProfile,\n  handleSaveProfile,\n}) => {\n  return (\n    <ProfileFormContainer onSubmit={handleSaveProfile}>\n      <AbilityWrap>\n        {ABILITIES.map((ability) => (\n          <AbilityRow key={ability}>\n            <AbilityTitle data-testid=\"ability-title\">{ability}</AbilityTitle>\n            <AbilityButton\n              type=\"button\"\n              onClick={() => handleChangeProfile(\"DECREASE\", ability)}\n              data-testid=\"ability-minus-btn\"\n              disabled={profileIsEmpty}\n            >\n              <MdRemove />\n            </AbilityButton>\n            <AbilityContent data-testid=\"ability-content\">\n              {profileIsEmpty ? <MdGrade /> : profile[ability]}\n            </AbilityContent>\n            <AbilityButton\n              type=\"button\"\n              onClick={() => handleChangeProfile(\"INCREASE\", ability)}\n              data-testid=\"ability-plus-btn\"\n              disabled={profileIsEmpty}\n            >\n              <MdAdd />\n            </AbilityButton>\n          </AbilityRow>\n        ))}\n      </AbilityWrap>\n      <RightBox>\n        <FlexColumn>\n          <RemainingPoint data-testid=\"remaining-points\">\n            Remaining Points: {unusedPoints}\n          </RemainingPoint>\n          <SaveButton\n            type=\"submit\"\n            data-testid=\"save-button\"\n            disabled={profileIsEmpty}\n          >\n            <MdSave /> Save\n          </SaveButton>\n        </FlexColumn>\n      </RightBox>\n    </ProfileFormContainer>\n  );\n};\n\nexport default memo(ProfileForm);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ModalProps {\n  open: boolean;\n  onClose: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 9999;\n\n  ${(props: { open: boolean }) => `\n    visibility: ${props.open ? 'visible' : 'hidden'}\n  `}\n`;\n\nconst ModalContainer = styled.div`\n  margin: 70px auto;\n  padding: 20px;\n  background: #fff;\n  border-radius: 5px;\n  width: 30%;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  font-size: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ModalTitle = styled.h2`\n  font-size: 2.5rem;\n`;\n\nconst CloseButton = styled.button`\n  background: transparent;\n  border: 0;\n  cursor: pointer;\n  font-size: 2.5rem;\n  font-weight: 700;\n\n  &:hover {\n    color: #8e8d8d;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ModalContent = styled.div`\n  font-size: 1.5rem;\n`;\n\nconst Modal: React.FC<ModalProps> = ({ open, onClose }) => {\n  return (\n    <ModalOverlay open={open}>\n      <ModalContainer>\n        <ModalHeader>\n          <ModalTitle>Warning!</ModalTitle>\n          <CloseButton onClick={onClose}>×</CloseButton>\n        </ModalHeader>\n        <ModalContent>You still have points not used.</ModalContent>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;\n","import {\r\n  Hero,\r\n  HeroProfile,\r\n  HeroesActionTypes,\r\n  FETCH_HERO,\r\n  STORE_HERO,\r\n  FETCH_HERO_PROFILE,\r\n  STORE_HERO_PROFILE,\r\n  CHANGE_PROFILE,\r\n  RESET_PROFILE,\r\n  SAVE_PROFILE,\r\n  SET_SELECTED_HERO_ID,\r\n} from './types';\r\n\r\nexport const fetchHero = (): HeroesActionTypes => ({\r\n  type: FETCH_HERO,\r\n});\r\n\r\nexport const storeHero = (heroes: Hero[]): HeroesActionTypes => ({\r\n  type: STORE_HERO,\r\n  payload: heroes,\r\n});\r\n\r\nexport const fetchHeroProfile = (heroId: string): HeroesActionTypes => ({\r\n  type: FETCH_HERO_PROFILE,\r\n  payload: { id: heroId },\r\n});\r\n\r\nexport const storeHeroProfile = (profile: HeroProfile): HeroesActionTypes => ({\r\n  type: STORE_HERO_PROFILE,\r\n  payload: { profile },\r\n});\r\n\r\nexport const changeProfile = (\r\n  profile: HeroProfile,\r\n  unusedPoints: number\r\n): HeroesActionTypes => ({\r\n  type: CHANGE_PROFILE,\r\n  payload: { profile, unusedPoints },\r\n});\r\n\r\nexport const saveProfile = (\r\n  heroId: string,\r\n  profile: HeroProfile\r\n): HeroesActionTypes => ({\r\n  type: SAVE_PROFILE,\r\n  payload: { heroId, profile },\r\n});\r\n\r\nexport const resetProfile = (): HeroesActionTypes => ({\r\n  type: RESET_PROFILE,\r\n});\r\n\r\nexport const setSelectedHeroId = (heroId: string): HeroesActionTypes => ({\r\n  type: SET_SELECTED_HERO_ID,\r\n  payload: { heroId },\r\n});\r\n","export const FETCH_HERO = 'FETCH_HERO';\r\nexport const STORE_HERO = 'STORE_HERO';\r\nexport const FETCH_HERO_PROFILE = 'FETCH_HERO_PROFILE';\r\nexport const STORE_HERO_PROFILE = 'STORE_HERO_PROFILE';\r\nexport const CHANGE_PROFILE = 'CHANGE_PROFILE';\r\nexport const SAVE_PROFILE = 'SAVE_PROFILE';\r\nexport const RESET_PROFILE = 'RESET_PROFILE';\r\nexport const SET_SELECTED_HERO_ID = 'SET_SELECTED_HERO_ID';\r\n\r\nexport interface Hero {\r\n  id: string;\r\n  name?: string;\r\n  image?: string;\r\n}\r\n\r\nexport interface HeroProfile {\r\n  str: number;\r\n  int: number;\r\n  agi: number;\r\n  luk: number;\r\n  [index: string]: number;\r\n}\r\n\r\nexport interface HeroesState {\r\n  heroes: Hero[];\r\n  profile: HeroProfile;\r\n  unusedPoints: number;\r\n  selectedHeroId: string;\r\n}\r\n\r\ninterface FetchHeroAction {\r\n  type: typeof FETCH_HERO;\r\n}\r\n\r\ninterface StoreHeroAction {\r\n  type: typeof STORE_HERO;\r\n  payload: Hero[];\r\n}\r\n\r\nexport interface FetchHeroProfileAction {\r\n  type: typeof FETCH_HERO_PROFILE;\r\n  payload: Hero;\r\n}\r\n\r\ninterface StoreHeroProfileAction {\r\n  type: typeof STORE_HERO_PROFILE;\r\n  payload: {\r\n    profile: HeroProfile;\r\n  };\r\n}\r\n\r\ninterface ChangeProfileAction {\r\n  type: typeof CHANGE_PROFILE;\r\n  payload: { profile: HeroProfile; unusedPoints: number };\r\n}\r\n\r\nexport interface SaveProfileAction {\r\n  type: typeof SAVE_PROFILE;\r\n  payload: { heroId: string; profile: HeroProfile };\r\n}\r\n\r\nexport interface ResetProfileAction {\r\n  type: typeof RESET_PROFILE;\r\n}\r\n\r\nexport interface SetSelectedHeroIdAction {\r\n  type: typeof SET_SELECTED_HERO_ID;\r\n  payload: { heroId: string };\r\n}\r\n\r\nexport type HeroesActionTypes =\r\n  | FetchHeroAction\r\n  | StoreHeroAction\r\n  | FetchHeroProfileAction\r\n  | StoreHeroProfileAction\r\n  | ChangeProfileAction\r\n  | SaveProfileAction\r\n  | ResetProfileAction\r\n  | SetSelectedHeroIdAction;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport Modal from \"./_Shared/Modal\";\r\n\r\nimport { HeroProfileProps } from \"./types/HeroProfile\";\r\nimport { RootState } from \"../redux\";\r\nimport { isEmptyProfile } from \"../utils/checkEmpty\";\r\nimport { changeProfile, saveProfile } from \"../redux/heroes/actions\";\r\n\r\nconst ProfileWrapper = styled.div`\r\n  color: white;\r\n  z-index: 10;\r\n  border: 3px solid white;\r\n  border-radius: 2px;\r\n  box-sizing: border-box;\r\n  background-color: rgba(9, 80, 132, 0.4);\r\n  font-family: \"Archivo Black\", sans-serif;\r\n  font-size: 3rem;\r\n  padding: 1rem;\r\n  margin-top: 3rem;\r\n\r\n  @media (max-width: 1200px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst HeroProfile: React.FC<HeroProfileProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const { heroId } = useParams();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const unusedPoints = useSelector(\r\n    (state: RootState) => state.heroes.unusedPoints\r\n  );\r\n  const profile = useSelector((state: RootState) => state.heroes.profile);\r\n\r\n  const profileIsEmpty = useMemo(() => isEmptyProfile(profile), [profile]);\r\n\r\n  /**\r\n   * change an ability value of the profile\r\n   * @param action INCREASE or DECREASE\r\n   * @param ability name of ability\r\n   */\r\n  const handleChangeProfile = (action: string, ability: string) => {\r\n    const newProfile = { ...profile };\r\n    if (action === \"INCREASE\" && unusedPoints > 0) {\r\n      newProfile[ability] += 1;\r\n      dispatch(changeProfile(newProfile, unusedPoints - 1));\r\n    } else if (action === \"DECREASE\" && profile[ability] > 0) {\r\n      newProfile[ability] -= 1;\r\n      dispatch(changeProfile(newProfile, unusedPoints + 1));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * save the profile into database\r\n   * @param event\r\n   */\r\n  const handleSaveProfile = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (unusedPoints === 0) {\r\n      dispatch(saveProfile(heroId, profile));\r\n    } else {\r\n      setModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSetModalClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n        <ProfileForm\r\n          profile={profile}\r\n          unusedPoints={unusedPoints}\r\n          profileIsEmpty={profileIsEmpty}\r\n          handleChangeProfile={handleChangeProfile}\r\n          handleSaveProfile={handleSaveProfile}\r\n        />\r\n      </ProfileWrapper>\r\n      <Modal open={modalOpen} onClose={handleSetModalClose}>\r\n        error\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeroProfile;\r\n","import { HeroProfile, Hero } from \"../redux/heroes/types\";\n\ntype IsEmptyProfile = (profile: HeroProfile) => boolean;\ntype IsEmptyHeroData = (heroes: Hero[]) => boolean;\n\nexport const isEmptyProfile: IsEmptyProfile = (profile: HeroProfile) => {\n  return Object.keys(profile).every((key) => profile[key] === 0);\n};\n\nexport const isEmptyHeroData: IsEmptyHeroData = (heroes: Hero[]) => {\n  return heroes.length === 0;\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { animated, useSprings } from \"react-spring\";\n\nconst Icons = styled.div`\n  width: 8rem;\n  height: 8rem;\n\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 1rem;\n`;\n\nconst Icon = styled(animated.div)`\n  background: url(${(props: { image: string }) => props.image}) no-repeat;\n  background-size: 100%;\n`;\n\nconst Loading = () => {\n  const getIcons = () => {\n    const icons = [\n      \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/769286/square.png\",\n      \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/769286/cross.png\",\n      \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/769286/circle.png\",\n      \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/769286/triangle.png\",\n    ];\n    // icons.sort(() => Math.random() - 0.5);\n    return icons;\n  };\n  const [images, ] = useState(getIcons());\n\n  const [springs, set] = useSprings(4, () => ({}));\n\n  useEffect(() => {\n    (function start() {\n      set((index) => ({\n        from: {\n          rotate: 270,\n          scale: 0,\n        },\n        to: {\n          rotate: 360,\n          scale: 1,\n        },\n        delay: 300 * index + 100,\n      }));\n      setInterval(start, 3000);\n    })()\n    \n  }, [set]);\n\n  return (\n    <Icons>\n      {springs.map((props, index) => (\n        <Icon style={props} key={index} image={images[index]} />\n      ))}\n    </Icons>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FixContent = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst FlexCenter = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WitchFixContent: React.FC = ({ children }) => {\n  return (\n    <FixContent>\n      <FlexCenter>{children}</FlexCenter>\n    </FixContent>\n  );\n};\n\nexport default WitchFixContent;\n","import React, { memo, useEffect, useCallback, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport HeroList from \"../components/HeroList\";\nimport HeroProfile from \"../components/HeroProfile\";\nimport Loading from \"../components/_Shared/Loading\";\nimport WithFixContent from \"../components/_Shared/WithFixContent\";\n\nimport { isEmptyHeroData } from \"../utils/checkEmpty\";\nimport { RootState } from \"../redux\";\nimport {\n  fetchHeroProfile,\n  resetProfile,\n  setSelectedHeroId,\n} from \"../redux/heroes/actions\";\n\nconst HeroPage = () => {\n  const heroes = useSelector((state: RootState) => state.heroes.heroes);\n  const dispatch = useDispatch();\n  const { heroId } = useParams();\n  const controlInitialRender = useRef();\n\n  const handleFetchHeroProfile = useCallback(\n    (selectedHeroId: string) => {\n      dispatch(resetProfile());\n      dispatch(fetchHeroProfile(selectedHeroId));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (heroId === undefined) {\n      dispatch(setSelectedHeroId(\"\"));\n    }\n\n    if (controlInitialRender.current !== undefined) {\n      return;\n    }\n\n    if (heroId !== undefined) {\n      controlInitialRender.current = heroId;\n      handleFetchHeroProfile(heroId);\n    }\n  }, [handleFetchHeroProfile, heroId, dispatch]);\n\n  if (isEmptyHeroData(heroes)) {\n    return (\n      <WithFixContent>\n        <Loading />\n      </WithFixContent>\n    );\n  }\n\n  return (\n    <>\n      <HeroList\n        heroes={heroes}\n        handleFetchHeroProfile={handleFetchHeroProfile}\n      />\n      {!!heroId && <HeroProfile />}\n    </>\n  );\n};\n\nexport default memo(HeroPage);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Wave from './components/_Shared/Wave';\nimport HeroPage from './pages/HeroPage';\nimport { fetchHero } from './redux/heroes/actions';\n\nconst Container = styled.div`\n  margin: 5vh 20% 0;\n  display: grid;\n\n  @media (max-width: 992px) {\n    margin: 3rem 12% 0;\n  }\n\n  @media (max-width: 768px) {\n    margin: 3rem 10% 0;\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchHero());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Wave />\n      <Router>\n        <Switch>\n          <Route exact path='/' render={() => <Redirect to='/heroes' />} />\n          <Route path='/heroes/:heroId?' component={HeroPage} />\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  HeroesState,\r\n  HeroesActionTypes,\r\n  STORE_HERO,\r\n  STORE_HERO_PROFILE,\r\n  CHANGE_PROFILE,\r\n  RESET_PROFILE,\r\n  SET_SELECTED_HERO_ID,\r\n} from \"./types\";\r\n\r\nconst initialState: HeroesState = {\r\n  heroes: [],\r\n  profile: {\r\n    str: 0,\r\n    int: 0,\r\n    agi: 0,\r\n    luk: 0,\r\n  },\r\n  unusedPoints: 0,\r\n  selectedHeroId: \"\",\r\n};\r\n\r\nconst heroesReducer = (\r\n  state = initialState,\r\n  action: HeroesActionTypes\r\n): HeroesState => {\r\n  switch (action.type) {\r\n    case STORE_HERO:\r\n      return {\r\n        ...state,\r\n        heroes: action.payload,\r\n      };\r\n    case STORE_HERO_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n      };\r\n    case CHANGE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload.profile,\r\n        unusedPoints: action.payload.unusedPoints,\r\n      };\r\n    case RESET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          str: 0,\r\n          int: 0,\r\n          agi: 0,\r\n          luk: 0,\r\n        },\r\n        unusedPoints: 0,\r\n      };\r\n    case SET_SELECTED_HERO_ID:\r\n      return {\r\n        ...state,\r\n        selectedHeroId: action.payload.heroId,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default heroesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport heroReducer from \"./heroes/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  heroes: heroReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\n\nconst rootAPI = axios.create({\n  baseURL: `${process.env.REACT_APP_HEROES_BASE_URL}`,\n});\n\nexport default rootAPI;\n","import rootAPI from \"./root-api\";\nimport { HeroProfile } from \"../redux/heroes/types\";\nimport {\n  GetHeroAPI,\n  GetHeroProfileAPI,\n  PatchHeroProfileAPI,\n} from \"./types/heroes\";\n\nexport const getHero: GetHeroAPI = () => rootAPI.get(\"/heroes\");\n\nexport const getHeroProfile: GetHeroProfileAPI = (heroId: string) =>\n  rootAPI.get(`/heroes/${heroId}/profile`);\n\nexport const patchHeroProfile: PatchHeroProfileAPI = (\n  heroId: string,\n  data: HeroProfile\n) => rootAPI.patch(`/heroes/${heroId}/profile`, data);\n","import { all } from 'redux-saga/effects';\r\nimport { put, takeEvery, call } from 'redux-saga/effects';\r\n\r\nimport { getHero, getHeroProfile, patchHeroProfile } from '../../apis/heroes';\r\nimport { storeHero, storeHeroProfile, setSelectedHeroId } from './actions';\r\nimport {\r\n  FETCH_HERO,\r\n  FETCH_HERO_PROFILE,\r\n  SAVE_PROFILE,\r\n  FetchHeroProfileAction,\r\n  SaveProfileAction,\r\n} from './types';\r\n\r\nexport function* fetchHero() {\r\n  const res = yield call(getHero);\r\n  const heroes = res.data;\r\n\r\n  yield put(storeHero(heroes));\r\n}\r\n\r\nexport function* fetchHeroProfile({ payload }: FetchHeroProfileAction) {\r\n  const { id } = payload;\r\n  yield put(setSelectedHeroId(id));\r\n\r\n  const res = yield call(getHeroProfile, id);\r\n  const profile = res.data;\r\n\r\n  yield put(storeHeroProfile(profile));\r\n}\r\n\r\nexport function* saveProfile({ payload }: SaveProfileAction) {\r\n  const { heroId, profile } = payload;\r\n  const { str, int, agi, luk } = profile;\r\n  const data = { str, int, agi, luk };\r\n\r\n  yield call(patchHeroProfile, heroId, data);\r\n}\r\n\r\nexport default function* heroesSaga() {\r\n  yield all([\r\n    takeEvery(FETCH_HERO, fetchHero),\r\n    takeEvery(FETCH_HERO_PROFILE, fetchHeroProfile),\r\n    takeEvery(SAVE_PROFILE, saveProfile),\r\n  ]);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport heroesSaga from \"./heroes/sagas\";\r\n\r\nfunction* rootSaga() {\r\n  yield all([heroesSaga()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\n// Log only in development\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}